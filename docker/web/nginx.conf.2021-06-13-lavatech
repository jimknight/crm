upstream rails_app {
  server app:3000;
}

server {
  listen 80 default_server;
  server_name _;
  return 301 https://$host$request_uri;
}

server {
  listen 443;

  # define the public application root
  root   $RAILS_ROOT/public;

  # SSL on
  ssl                  on;
  ssl_certificate      $RAILS_ROOT/ssl/crm.lavatech.com/fullchain.pem;
  ssl_certificate_key  $RAILS_ROOT/ssl/crm.lavatech.com/privkey.pem;

  # define where Nginx should write its logs
  access_log $RAILS_ROOT/log/nginx.access.log;
  error_log $RAILS_ROOT/log/nginx.error.log;

   # http://craigjolicoeur.com/blog/setting-static-asset-expires-headers-with-nginx-and-passenger
   location ~* \.(ico|css|js|gif|jpe?g|png)(\?[0-9]+)?$ {
     expires max;
     break;
   }

   location ^~ /assets/ {
     gzip_static on;
     expires max;
     add_header Cache-Control public;
   }

   # send non-static file requests to the app server
   location / {
      try_files $uri @rails;
   }

   location @rails {
      proxy_set_header  X-Real-IP  $remote_addr;
      proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto https;
      proxy_set_header Host $host;
      proxy_redirect off;
      proxy_read_timeout 300; # http://howtounix.info/howto/110-connection-timed-out-error-in-nginx
      proxy_pass http://rails_app;
   }

   error_page 500 502 503 504 /500.html;
   client_max_body_size 4G;
   keepalive_timeout 10;

   # Forward secrecy
   ssl_protocols TLSv1.2;
   ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
   ssl_prefer_server_ciphers off;
   ssl_dhparam $RAILS_ROOT/ssl/dh4096.pem;
}
